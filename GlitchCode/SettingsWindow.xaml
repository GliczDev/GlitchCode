<Window x:Class="GlitchCode.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GlitchCode"
        mc:Ignorable="d"
        Title="GlitchCode" 
        Height="150" 
        MaxHeight="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}"
        MinHeight="150"
        Width="300" 
        MinWidth="300"
        Icon="Images/GlitchCode.ico"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Background="Transparent"
        WindowStyle="None"
        AllowsTransparency="True" 
        Closing="Window_Closing">
    <Window.Resources>
        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Border x:Name="Border" Background="#23272A" BorderBrush="#23272A" BorderThickness="2" CornerRadius="5" Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <Ellipse x:Name="outerEllipse" Grid.Column="0">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="Images/no.png"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Border>
                            <ContentPresenter x:Name="content" Margin="18,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="outerEllipse" Property="Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images/yes.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="outerEllipse" Property="Fill">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Images/no.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="#2a4a5b"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#26a0da"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="Button1" TargetType="Button">
            <Border x:Name="Border" CornerRadius="5" Background="#23272A" BorderBrush="#23272A" BorderThickness="1" SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="Border" Value="#2a4a5b"/>
                    <Setter Property="BorderBrush" TargetName="Border" Value="#26a0da"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="Buttons" TargetType="{x:Type Ellipse}">
            <Setter Property="Opacity" Value="0.25" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                  To="1" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                  To="0.25" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="#23272A" 
              CornerRadius="3" BorderThickness="1, 1, 1, 1" 
              Background="#23272A" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#23272A" Name="ButtonBorder"
              CornerRadius="3" BorderThickness="1, 1, 1, 1"
              Background="#23272A" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="LightGray"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#2a4a5b"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#26a0da"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="#23272A"/>
                    <Setter Property="Panel.Opacity" TargetName="Border" Value="0.5"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#23272A"/>
                    <Setter Property="Panel.Opacity" TargetName="ButtonBorder" Value="0"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="#23272A"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="LightGray"/>
                    <Setter Property="Shape.Opacity" TargetName="Arrow" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" 
                        Margin="0, 1, 0, 0"
                        CornerRadius="3" BorderThickness="1,1,1,1" 
                        BorderBrush="#23272A" Background="#23272A"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.15" FillBehavior="HoldEnd" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Border x:Name="Border" Background="#2C2F33" CornerRadius="10">
        <Grid>
            <Image 
                Source="Images/GlitchCode.png"
                VerticalAlignment="Top"
                HorizontalAlignment="Left" 
                RenderTransformOrigin="28.887,-0.097" 
                Height="26" 
                Margin="10,10,0,40" 
                Width="23" Grid.RowSpan="2"
                RenderOptions.BitmapScalingMode="HighQuality"/>
            <Ellipse Style="{StaticResource Buttons}" Margin="0,10,12,0" x:Name="closeButton" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="16" RenderTransformOrigin="0.5,0.5" Width="16" Cursor="Hand" MouseLeftButtonDown="closeButton_Click">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="-1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Fill>
                    <ImageBrush ImageSource="Images/close.png"/>
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock FontFamily="/GlitchCode;component/Fonts/#Open Sans" FontSize="16" UseLayoutRounding="False" Margin="108.5,10,108.5,0" Text="GlitchCode" Foreground="Gray" VerticalAlignment="Top" RenderTransformOrigin="-0.033,0.459"/>
            <Button x:Name="CancelB" IsCancel="True" Template="{StaticResource Button1}" Margin="0,0,10,10" Content="Cancel" FontFamily="/GlitchCode;component/Fonts/#Open Sans" Foreground="White" Click="cancelButton_Click" HorizontalAlignment="Right" Width="53" Height="23" VerticalAlignment="Bottom" RenderTransformOrigin="0.163,0.228" />
            <Button x:Name="SaveB" IsDefault="True" Template="{StaticResource Button1}" Margin="179,117,68,10" Content="Save" FontFamily="/GlitchCode;component/Fonts/#Open Sans" Foreground="White" Click="saveButton_Click" />
            <TextBlock FontFamily="/GlitchCode;component/Fonts/#Open Sans" FontSize="14" UseLayoutRounding="False" Margin="10,36,0,0" Text="Language (in work)" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Top" Width="127"></TextBlock>
            <ComboBox Style="{StaticResource ComboBoxFlatStyle}" HorizontalAlignment="Left" Margin="10,60,0,0" VerticalAlignment="Top" Width="120" SelectedIndex="0" IsEnabled="False">
                <ComboBoxItem Content="English" />
            </ComboBox>
            <TextBlock FontFamily="/GlitchCode;component/Fonts/#Open Sans" FontSize="14" UseLayoutRounding="False" Margin="145,36,0,0" Text="Theme (in work)" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120"></TextBlock>
            <ComboBox Style="{StaticResource ComboBoxFlatStyle}" HorizontalAlignment="Left" Margin="145,60,0,0" VerticalAlignment="Top" Width="120" SelectedIndex="0" IsEnabled="False">
                <ComboBoxItem Content="Dark" />
                <ComboBoxItem Content="Light" />
                <ComboBoxItem Content="Custom" />
            </ComboBox>
            <CheckBox x:Name="showLineNumbers" Style="{StaticResource CircleCheckbox}" Content="Show line numbers" Margin="10,85,160,46" Foreground="White" IsChecked="True" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <CheckBox x:Name="showTabs" Style="{StaticResource CircleCheckbox}" Content="Show tabs" Margin="145,86,0,48" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        </Grid>
    </Border>
</Window>
